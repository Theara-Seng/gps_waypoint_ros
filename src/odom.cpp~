#include "ros/ros.h"
#include "geometry_msgs/Vector3Stamped.h"


//void MotorBackCallback(const std_msgs::Int8::ConstPtr& msg){
   
// 	ROS_INFO("The value is [%d]", msg->data);

//}
double v1=0.0;
double v2=0.0;
double v3=0.0;
double v4=0.0;


void SpeedMotorBackCallback(const geometry_msgs::Vector3Stamped::ConstPtr& msg)
{
	v3=msg.vector.x;
	v4=msg.vector.y;
}

int main(int argc, char **argv){

ros::init(argc,argv,"encoder_subscriber");
ros::NodeHandle nh;
ros::Subscriber Speed_motor_back=nh.subscribe("speed_motor_back",1000,SpeedMotorBackCallback);
ros::Subscriber Position_motor_back=nh.subscribe("position_motor_back",1000,PoseMotorBackCallback);
ros::Subscriber Speed_motor_front=nh.subscribe("speed_motor_front",1000,SpeeddMotorFrontCallback);
ros::Subscriber Position_motor_front=nh.subscribe("position_motor_front",1000,PoseMotorFrontCallback);
ros::spin();
return 0;

}
